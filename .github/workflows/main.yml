name: Build & Deploy Spring Boot App
on: push

jobs:
  build-and-deploy:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.2.2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew clean build -x test

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/boelgen/boelgen-backend
          tags: |
            type=sha,format=long
            latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to Azure VM
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.AZURE_HOST }}
          username: ${{ secrets.AZURE_USER }}
          key: ${{ secrets.AZURE_SSH_KEY }}
          command_timeout: "5m"
          debug: true
          script: |
            echo "Starting deployment..."
            cd /home/boelgenbruger/backend

            # Install Docker if not already installed
            if ! command -v docker &> /dev/null; then
              echo "Installing Docker..."
              sudo apt-get update
              sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
              curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
              sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
              sudo apt-get update
              sudo apt-get install -y docker-ce docker-ce-cli containerd.io
            fi

            # Start Docker service
            sudo systemctl start docker

            # Pull the new Docker image
            echo "Pulling latest Docker image..."
            docker pull ghcr.io/boelgen/boelgen-backend:latest

            # Update docker-compose.yml with the new image
            echo "Updating docker-compose.yml..."
            cat > docker-compose.yml << 'EOL'
            version: "3.8"
            services:
              backend:
                image: ghcr.io/boelgen/boelgen-backend:latest
                ports:
                  - "8080:8080"
                environment:
                  - SPRING_PROFILES_ACTIVE=prod
                  - MYSQL_USERNAME=${{ secrets.MYSQL_USERNAME }}
                  - MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}
                  - MYSQL_HOSTNAME=${{ secrets.MYSQL_HOSTNAME }}
                  - MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}
                restart: always
                deploy:
                  resources:
                    limits:
                      cpus: '0.5'
                      memory: 512M
            EOL

            # Restart containers
            echo "Restarting containers..."
            docker-compose down
            docker-compose up -d

            # Clean up unused images
            echo "Cleaning up..."
            docker image prune -f

            echo "Deployment completed."
